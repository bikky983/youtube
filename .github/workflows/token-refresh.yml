name: Refresh YouTube Token

on:
  schedule:
    # Run every 3 days at 12:00 UTC
    - cron: '0 12 */3 * *'
  workflow_dispatch:
    # Allow manual triggering

jobs:
  refresh-token:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create client secrets file
        run: |
          cat > client_secret.json << 'EOF'
          {"installed":{"client_id":"584570444735-3rddtpke08e9bv4t7efqcrknvtt5idfb.apps.googleusercontent.com","project_id":"direct-tribute-465003-s8","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_secret":"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","redirect_uris":["http://localhost"]}}
          EOF

      - name: Restore token pickle
        run: |
          if [ -n "${{ secrets.YOUTUBE_TOKEN_PICKLE }}" ]; then
            echo "${{ secrets.YOUTUBE_TOKEN_PICKLE }}" | base64 -d > token.pickle
          elif [ -f "token_base64.txt" ] && [ -s "token_base64.txt" ]; then
            cat token_base64.txt | base64 -d > token.pickle
          fi
        continue-on-error: true

      - name: Check token and refresh if needed
        run: |
          # Create a simple script to check and refresh token
          cat > check_token.py << 'EOF'
          import logging
          import sys
          
          # Configure logging
          logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
          
          # Import our token manager
          from token_manager import refresh_token_if_needed
          
          # Check if token needs refreshing (4 days threshold)
          if refresh_token_if_needed(days_threshold=4):
              logging.info("Token check completed successfully")
              sys.exit(0)
          else:
              logging.error("Token refresh failed")
              sys.exit(1)
          EOF
          
          # Run the token check script
          python check_token.py

      - name: Save refreshed token
        if: success()
        run: |
          if [ -f "token.pickle" ] && [ -s "token.pickle" ]; then
            TOKEN_PICKLE=$(base64 -w 0 token.pickle)
            echo "::add-mask::$TOKEN_PICKLE"
            echo "TOKEN_PICKLE=$TOKEN_PICKLE" >> $GITHUB_ENV
            echo "$TOKEN_PICKLE" > token_base64.txt
            echo "Token refreshed and saved to token_base64.txt"
          fi

      - name: Commit changes
        if: success()
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Actions"
          
          # Check if there are changes to commit
          if git status --porcelain | grep -q "token_base64.txt"; then
            git add token_base64.txt
            git commit -m "Refresh YouTube API token [skip ci]"
            
            # Set up authentication for pushing
            git remote set-url origin https://x-access-token:${{ github.token }}@github.com/${{ github.repository }}
            
            # Push changes
            git push
            echo "Token refreshed and changes committed"
          else
            echo "No changes to commit - token is still valid"
          fi 